---
- name: "Define retry limit"
  ansible.builtin.set_fact:
    max_retry_count: 3

- name: "Get system package facts"
  ansible.builtin.package_facts:
    manager: "auto"

- name: "Remove snap packages if snapd is installed"
  when: "'snapd' in ansible_facts.packages"
  block:
    - name: "Initialize or increment retry counter"
      ansible.builtin.set_fact:
        retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"

    - name: "Get installed snap packages"
      ansible.builtin.command:
        cmd: "snap list"
      register: "snap_list_output"
      changed_when: false

    - name: "Extract snap package names"
      ansible.builtin.set_fact:
        snap_packages: "{{ snap_list_output.stdout_lines[1:] | map('split', ' ') | map('first') | list }}"

    - name: "Remove snap packages"
      ansible.builtin.command:
        cmd: "snap remove {{ item }}"
      loop: "{{ snap_packages }}"
      register: "snap_remove_output"
      changed_when: "'removed' in snap_remove_output.stdout"

  rescue:
    - name: "Check retry limit"
      ansible.builtin.fail:
        msg: "Maximum retry limit of {{ max_retry_count }} reached when removing snap packages"
      when: "retry_count | int >= max_retry_count"

    - name: "Log retry attempt"
      ansible.builtin.debug:
        msg: "Removing snap packages failed, retrying (attempt {{ retry_count | int }} of {{ max_retry_count }})"

    - name: "Retry snap package removal"
      ansible.builtin.include_tasks: "remove-snap-packages.yaml"

- name: "Remove snap packages"
  ansible.builtin.apt:
    name: "{{ uninstall_packages }}"
    state: "absent"
